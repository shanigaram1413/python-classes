Variables and Data Types.
-------------------------
what is a variable?
A variable is a named location in memory used to store data

* In Python variable are created by assigning  a Value using the = operator.

→ Characteristics of Variables in Python's

1. No Declaration Needed: You don't need to declare the type of the variable explicitly. 

2. Dynamic Typing:-The Same Variable Hata con bald different type data

Variable Naming Rules.

1. must starts with a letter or underscore but not a number. underscore (-)

2. can only contain Alphanumeric characters (a-z, 0-9)

3 case sensitive.

4. can't use Keywords as a Variable names

Example: def, lambda

Data Types in Python:
Python has built-in data types that define the nature of the data stored in variable.
1.Numeric Type:
  int :Whole number (Eg:1,10)
  float: Decimal numbers(eg:105)
 complex:Numbers with a real and imaginary part(eg:4+5j)
2.Sequence Type:
	Str: string represent text (Ex: ”Hello”)
	List: Mutable, Ordered, collection of items
	Tuple: Immutable, ordered collection of items.
3.Mapping Type:
	Dictionary(dict) : Collection of key-value pairs.
4.Boolean Type:
	Represent True or False
5.set type:
	Set: Unordered collection of unique items
6.None Type:
	Represent the absence of a value (Ex: None)
Note: Use type() function  to get the data type.

Type conversion and Type Casting:
---------------------------------
	Type conversion and type casting are processes of converting one data type into another.
	In python this can be done in two ways.
Implicit type conversion:
-------------------------
Python automatically converts a smaller data type to a larger data type to avoid data loss. This is done automatically by python
	Example:
		a = 10
		b = 3.5
		c = a + b
		print(type(c)) # float
		print(c) -13.5
2.Explicit type conversion(Type Casting):-
-----------------------------------------
	The programmer manually converts a value from one data type to another using pre-define functions.
	int()		bool()		float()		str()
	list()		set()		tuple()
Note: Bool convert value to True or False
	Return False for 0,None,empty collections like([],{},’’)…etc
	Return True for all other values
Basic Errors:
============
	Value Error: input value is invalid for the target data
Type Error:
===========
	The type of input is not compatible with the conversion function.
 
Input and Output  Functions in python:-
=====================================
Python provides built-in functions for handling user input and display output. These functions are essential for interacting with users in programs.

Input Function:
==============
	The input function is used to take input from the user as a string
		Syntax: variable = input(prompt)
			Variable --- reference variable
			Input -- function name
			Prompt -- > optional—a string display to the user asking for input
	--> This function returns the user input as a string
Example:
	name = input(“Enter your name”)
	print(name)
Note:-
	Since input() always returns a string, you can use type casting for numerical inputs.
	Example:
		age = input(“Enter your age:”)
		print(int(age))   # convert input into integer.
Output functions:-
================
	The print() function is used to display output to the user
Syntax:-
	print(object, set=’’, end=’\n’)
	object: one or more objects to display
	sep: separator between objects. Default is a space(optional)
	end: string appended after the output. Default is new line(optional)
Example:
	print(“Hello well come to python”) 
	print(“Hello”, ”Well”, ”come”, ”To”, ”Python”)
	print(“Hello”,  “World”,  sep=”-”)
	print(“Hello”,  end=’ ’)
	print(“World”)
